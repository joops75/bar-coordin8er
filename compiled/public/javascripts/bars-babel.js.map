{
  "version": 3,
  "sources": [
    "bars-babel.js"
  ],
  "names": [
    "dateFilter",
    "attendedBy",
    "attendedByFiltered",
    "filter",
    "attendee",
    "nextMidnight",
    "Date",
    "now",
    "date",
    "dateInMilliseconds",
    "dayMilliseconds",
    "Math",
    "ceil",
    "SearchResults",
    "props",
    "state",
    "bars",
    "limit",
    "offset",
    "currentPage",
    "input",
    "bind",
    "clickSearch",
    "clickPage",
    "attendBar",
    "ajaxFunctions",
    "ready",
    "ajaxRequest",
    "appUrl",
    "data",
    "split",
    "parsedData",
    "JSON",
    "parse",
    "username",
    "github",
    "attending",
    "length",
    "setState",
    "sessionStorage",
    "getItem",
    "localData",
    "$",
    "value",
    "term",
    "location",
    "countryCodeValue",
    "keyMatcher",
    "countryCode",
    "Code",
    "countryNameIndex",
    "countryCodes",
    "findIndex",
    "countryName",
    "Name",
    "textContent",
    "getAttendees",
    "url",
    "i",
    "barId",
    "businesses",
    "id",
    "ajaxAttendance",
    "number",
    "pageRequest",
    "address",
    "neighborhood",
    "city",
    "stateOrZip",
    "country",
    "countryCodeIndex",
    "parseInt",
    "ajaxBarRequest",
    "yelpBarsData",
    "setItem",
    "stringify",
    "e",
    "which",
    "search",
    "target",
    "className",
    "removeItem",
    "css",
    "fadeOut",
    "attendingIndex",
    "j",
    "push",
    "splice",
    "headerStyle",
    "visibility",
    "loginButtonStyle",
    "display",
    "logoutButtonStyle",
    "logout",
    "clickList",
    "total",
    "React",
    "Component",
    "List",
    "countries",
    "map",
    "Bars",
    "bar",
    "img",
    "image_url",
    "barMatch",
    "attendingDisplay",
    "name",
    "rating",
    "price",
    "marginTop",
    "Pages",
    "totalBars",
    "numPages",
    "min",
    "floor",
    "pagesArr",
    "pages",
    "page",
    "classNameDetails",
    "ReactDOM",
    "render",
    "document",
    "getElementById"
  ],
  "mappings": "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",
  "file": "bars-babel.js",
  "sourceRoot": "../../../src/public/javascripts",
  "sourcesContent": [
    "      var dateFilter = function(attendedBy) {\r\n        var attendedByFiltered = attendedBy.filter(function(attendee) {\r\n          return nextMidnight(Date.now()) == nextMidnight(attendee.date)\r\n        })\r\n        return attendedByFiltered\r\n      }\r\n      var nextMidnight = function(dateInMilliseconds) {\r\n        var dayMilliseconds = 1000 * 60 * 60 * 24\r\n        return Math.ceil(dateInMilliseconds / dayMilliseconds) * dayMilliseconds\r\n      }\r\n      class SearchResults extends React.Component {\r\n        constructor(props) {\r\n          super(props)\r\n          this.state = {\r\n            bars: '',\r\n            limit: 20,\r\n            offset: 0,\r\n            currentPage: 1\r\n          }\r\n          this.input = this.input.bind(this)//not sure why this needs binding as it isn't passed down as props\r\n          this.clickSearch = this.clickSearch.bind(this)\r\n          this.clickPage = this.clickPage.bind(this)\r\n          this.attendBar = this.attendBar.bind(this)\r\n        }\r\n        componentWillMount() {\r\n          ajaxFunctions.ready(ajaxFunctions.ajaxRequest('GET', appUrl + '/api/:id', (data) => {\r\n            if (data.split('', 1)[0] == '{') {//confirms response data is an object and thus logged in\r\n              var parsedData = JSON.parse(data)\r\n              var username = parsedData.github.username\r\n              var attending = parsedData.attending\r\n              if (attending.length > 0) attending = dateFilter(attending)\r\n              this.setState({\r\n                username: username,\r\n                attending: attending\r\n              })\r\n            }\r\n            if (sessionStorage.getItem('yelpBarsData')) {\r\n              var localData = JSON.parse(sessionStorage.getItem('yelpBarsData'))\r\n              $('#termSearchBox')[0].value = localData.term\r\n              $('#townSearchBox')[0].value = localData.location.split(',')[2]\r\n              \r\n              var countryCodeValue = localData.location.split(',')[4]\r\n              var keyMatcher = function(countryCode) {\r\n                return countryCode.Code == countryCodeValue\r\n              }\r\n              var countryNameIndex = countryCodes.findIndex(keyMatcher)\r\n              var countryName = countryCodes[countryNameIndex].Name\r\n              $('#countryButton')[0].textContent = countryName\r\n              \r\n              this.setState({\r\n                bars: localData.bars,\r\n                currentPage: localData.currentPage\r\n              })\r\n              this.getAttendees(localData.bars)\r\n            }\r\n          }))\r\n        }\r\n        getAttendees(bars) {\r\n          var url = appUrl + '/api/:id/getAttendees'\r\n          for (let i = 0; i < bars.businesses.length; i++) {\r\n            var barId = bars.businesses[i].id\r\n            ajaxFunctions.ready(ajaxFunctions.ajaxAttendance('GET', url, barId, (number) => {\r\n              $('#attendButton_' + i)[0].textContent = number + ' going'\r\n            }))\r\n          }\r\n        }\r\n        search(pageRequest) {\r\n          var url = appUrl + '/api/:id/bars'\r\n          var term = $('#termSearchBox')[0].value\r\n          var address = \"''\", neighborhood = \"''\", city = \"''\", stateOrZip = \"''\", country = \"''\"\r\n          var city = $('#townSearchBox')[0].value\r\n          \r\n          var countryName = $('#countryButton')[0].textContent\r\n          var keyMatcher = function(countryCode) {\r\n            return countryCode.Name == countryName\r\n          }\r\n          var countryCodeIndex = countryCodes.findIndex(keyMatcher)\r\n          country = countryCodes[countryCodeIndex].Code\r\n          \r\n          var location = address + ',' + neighborhood + ',' + city + ',' + stateOrZip + ',' + country\r\n          var limit = this.state.limit\r\n          var currentPage\r\n          pageRequest? currentPage = parseInt(pageRequest, 10) : currentPage = 1\r\n          var offset = limit * (currentPage - 1)\r\n          ajaxFunctions.ready(ajaxFunctions.ajaxBarRequest('GET', url, term, location, limit, offset, (data) => {\r\n            var parsedData = JSON.parse(data)\r\n            this.setState({\r\n              bars: parsedData,\r\n              currentPage: currentPage\r\n            })\r\n            this.getAttendees(parsedData)\r\n            // save data locally\r\n            var yelpBarsData = {\r\n              term: term,\r\n              location: location,\r\n              currentPage: currentPage,\r\n              bars: parsedData\r\n            }\r\n            sessionStorage.setItem('yelpBarsData', JSON.stringify(yelpBarsData))\r\n          }))\r\n        }\r\n        input(e) {\r\n          if (e.which == 13) {\r\n            this.search()\r\n          }\r\n        }\r\n        clickSearch() {\r\n          this.search()\r\n        }\r\n        clickList(e) {\r\n          $('#countryButton')[0].textContent = e.target.textContent\r\n        }\r\n        clickPage(e) {\r\n          if (e.target.className == 'page') {\r\n            var pageRequest = e.target.textContent\r\n            this.search(pageRequest)\r\n          }\r\n        }\r\n        logout() {\r\n          sessionStorage.removeItem('yelpBarsData')\r\n        }\r\n        attendBar(e) {\r\n          var i = e.target.id.split('_')[1]\r\n          if (!this.state.username) {\r\n            $('#attendNotice_' + i).css('display', 'inline').fadeOut(3000)\r\n          } else {\r\n            var url = appUrl + '/api/:id/attendBar'\r\n            var barId = this.state.bars.businesses[i].id\r\n            ajaxFunctions.ready(ajaxFunctions.ajaxAttendance('POST', url, barId, (number) => {\r\n              $('#attendButton_' + i)[0].textContent = number + ' going'\r\n              var attending = this.state.attending\r\n              var attendingIndex = -1\r\n              for (let j in attending) {\r\n                if (attending[j].id == barId) attendingIndex = j\r\n                break\r\n              }\r\n              if (attendingIndex == -1) {\r\n                attending.push({id: barId, date: Date.now()})\r\n              } else {\r\n                attending.splice(attendingIndex, 1)\r\n              }\r\n              this.setState({\r\n                attending: attending\r\n              })\r\n            }))\r\n          }\r\n        }\r\n        render() {\r\n          var headerStyle = () => {\r\n            if (!this.state.username) return {visibility: 'hidden'}\r\n          }\r\n          var loginButtonStyle = () => {\r\n            if (this.state.username) return {display: 'none'}\r\n          }\r\n          var logoutButtonStyle = () => {\r\n            if (!this.state.username) return {display: 'none'}\r\n          }\r\n          return (\r\n            <div>\r\n              <h2>Bar Coordin8er</h2>\r\n              <div className=\"navigation\">\r\n                <a href=\"/auth/github\"><button className=\"btn btn-primary height-restrict-btn inline float-right\" style={loginButtonStyle()}><i className='fa fa-github'></i> Login</button></a>\r\n                <a href=\"/logout\"><button className=\"btn btn-primary height-restrict-btn inline float-right\" style={logoutButtonStyle()} onClick={this.logout}><i className='fa fa-github'></i> Logout</button></a>\r\n                <span className=\"height-restrict inline float-right\" style={headerStyle()}>Welcome, {this.state.username}</span>\r\n                <input id='termSearchBox' className=\"height-restrict\" type='text' placeholder='Enter search term' onKeyDown={this.input}/>\r\n                <input id='townSearchBox' className=\"height-restrict\" type='text' placeholder='Enter town/city' onKeyDown={this.input}/>\r\n                <span className=\"dropdown height-restrict\">\r\n                  <button id='countryButton' className=\"btn btn-primary dropdown-toggle height-restrict-btn\" type=\"button\" data-toggle=\"dropdown\">United States</button>\r\n                  <List clickList={this.clickList}/>\r\n                </span> \r\n                <button className=\"btn btn-primary height-restrict-btn\" onClick={this.clickSearch}>Go!</button>\r\n              </div>\r\n              <Bars bars={this.state.bars} attendBar={this.attendBar} attending={this.state.attending}/>\r\n              <Pages totalBars={this.state.bars.total} limit={this.state.limit} offset={this.state.offset} currentPage={this.state.currentPage} clickPage={this.clickPage}/>\r\n            </div>\r\n          )\r\n        }\r\n      }\r\n      \r\n      function List(props) {\r\n        var countries = countryCodes.map(function(country, i) {\r\n          return <li key={'list_' + i} id={'list_' + i} onClick={props.clickList}>{country.Name}</li>\r\n        })\r\n        return <ul className=\"dropdown-menu\" size='20'>{countries}</ul>\r\n      }\r\n      \r\n      function Bars(props) {\r\n        if (props.bars) {\r\n          var bars = props.bars.businesses.map(function(bar, i) {\r\n            var img\r\n            bar.image_url ? img = <img src={bar.image_url}/> : img = <img src='/public/img/NoImageAvailable.png'/>\r\n            var barMatch = false\r\n            if (props.attending && props.attending.length > 0) {\r\n              for (let j in props.attending) {\r\n                if (props.attending[j].id == bar.id) {\r\n                  barMatch = true\r\n                  break\r\n                }\r\n              }\r\n            }\r\n            var attendingDisplay\r\n            barMatch ? attendingDisplay = {display: ''} : attendingDisplay = {display: 'none'}\r\n            \r\n            return (\r\n              <div key={'bars_' + i} className=\"results row-height\">\r\n                <div className='inline'>\r\n                  <div className='inline'>{img}</div>\r\n                  <div className='inline'><a href={bar.url} target='_blank'><span>{bar.name}</span></a></div>\r\n                  <span>Rating: {bar.rating}</span>\r\n                  <span>Price: {bar.price}</span>\r\n                </div>\r\n                <div className='inline float-right'>\r\n                  <span id={`attendNotice_${i}`} className='line-height' style={{display: 'none'}}>Please login to declare atttendance!</span>\r\n                  <span id={`attending_${i}`} className=\"line-height\" style={attendingDisplay}>Attending this bar!</span>\r\n                  <button id={`attendButton_${i}`} className=\"btn btn-primary height-restrict-btn float-right\" style={{marginTop: '35px'}} onClick={props.attendBar}>0 going</button>\r\n                </div>\r\n              </div>  \r\n            )\r\n          })\r\n          return <div>{bars}</div>\r\n        } else {\r\n          return null\r\n        }\r\n      }\r\n      \r\n      function Pages(props) {\r\n        if (props.totalBars && props.totalBars > props.limit) {\r\n          var numPages = Math.min(Math.ceil(props.totalBars / props.limit), Math.floor(1000 / props.limit))//can only search for the first 1000 businesses on yelp api\r\n          var pagesArr = []\r\n          for (var i = 1; i <= numPages; i++) {\r\n             pagesArr.push(i)\r\n          }\r\n          var pages = pagesArr.map(function(page, i) {\r\n            var classNameDetails\r\n            props.currentPage == page ? classNameDetails = 'nopage' : classNameDetails = 'page'\r\n            return <span key={'pages_' + i}><span className={classNameDetails} onClick={props.clickPage}>{page}</span> </span>\r\n          })\r\n          return (\r\n            <div>\r\n              <div className=\"navigation\">Skip to page:</div>\r\n              <div className='pages'>{pages}</div>\r\n            </div>\r\n          )\r\n        } else {\r\n          return null\r\n        }\r\n      }\r\n      \r\n      ReactDOM.render(<SearchResults />, document.getElementById('target'))"
  ]
}

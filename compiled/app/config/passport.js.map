{
  "version": 3,
  "sources": [
    "passport.js"
  ],
  "names": [
    "GitHubStrategy",
    "require",
    "Strategy",
    "User",
    "configAuth",
    "module",
    "exports",
    "passport",
    "serializeUser",
    "user",
    "done",
    "id",
    "deserializeUser",
    "findById",
    "err",
    "use",
    "clientID",
    "githubAuth",
    "clientSecret",
    "callbackURL",
    "token",
    "refreshToken",
    "profile",
    "process",
    "nextTick",
    "findOne",
    "newUser",
    "github",
    "displayName",
    "username",
    "publicRepos",
    "_json",
    "public_repos",
    "attending",
    "save"
  ],
  "mappings": "AAAA;;AAEA,IAAIA,iBAAiBC,QAAQ,iBAAR,EAA2BC,QAAhD;AACA,IAAIC,OAAOF,QAAQ,iBAAR,CAAX;AACA,IAAIG,aAAaH,QAAQ,QAAR,CAAjB;;AAEAI,OAAOC,OAAP,GAAiB,UAASC,QAAT,EAAmB;AAChCA,aAASC,aAAT,CAAuB,UAASC,IAAT,EAAeC,IAAf,EAAqB;AACxCA,aAAK,IAAL,EAAWD,KAAKE,EAAhB;AACH,KAFD;AAGAJ,aAASK,eAAT,CAAyB,UAASD,EAAT,EAAaD,IAAb,EAAmB;AACxCP,aAAKU,QAAL,CAAcF,EAAd,EAAkB,UAASG,GAAT,EAAcL,IAAd,EAAoB;AAClCC,iBAAKI,GAAL,EAAUL,IAAV;AACH,SAFD;AAGH,KAJD;AAKAF,aAASQ,GAAT,CAAa,IAAIf,cAAJ,CAAmB;AAC5BgB,kBAAUZ,WAAWa,UAAX,CAAsBD,QADJ;AAE5BE,sBAAcd,WAAWa,UAAX,CAAsBC,YAFR;AAG5BC,qBAAaf,WAAWa,UAAX,CAAsBE;AAHP,KAAnB,EAKb,UAAUC,KAAV,EAAiBC,YAAjB,EAA+BC,OAA/B,EAAwCZ,IAAxC,EAA8C;AAC1Ca,gBAAQC,QAAR,CAAiB,YAAW;AACxBrB,iBAAKsB,OAAL,CAAa,EAAC,aAAaH,QAAQX,EAAtB,EAAb,EAAwC,UAASG,GAAT,EAAcL,IAAd,EAAoB;AACxD,oBAAIK,GAAJ,EAAS,OAAOJ,KAAKI,GAAL,CAAP;AACT,oBAAIL,IAAJ,EAAU;AACN,2BAAOC,KAAK,IAAL,EAAWD,IAAX,CAAP;AACH,iBAFD,MAGK;AACD,wBAAIiB,UAAU,IAAIvB,IAAJ,EAAd;AACAuB,4BAAQC,MAAR,CAAehB,EAAf,GAAoBW,QAAQX,EAA5B;AACAe,4BAAQC,MAAR,CAAeC,WAAf,GAA6BN,QAAQX,EAArC;AACAe,4BAAQC,MAAR,CAAeE,QAAf,GAA0BP,QAAQO,QAAlC;AACAH,4BAAQC,MAAR,CAAeG,WAAf,GAA6BR,QAAQS,KAAR,CAAcC,YAA3C;AACAN,4BAAQO,SAAR,GAAoB,EAApB;;AAEAP,4BAAQQ,IAAR,CAAa,UAASpB,GAAT,EAAc;AACvB,4BAAIA,GAAJ,EAAS,MAAMA,GAAN;AACT,+BAAOJ,KAAK,IAAL,EAAWgB,OAAX,CAAP;AACH,qBAHD;AAIH;AACJ,aAlBD;AAmBH,SApBD;AAqBH,KA3BY,CAAb;AA6BH,CAtCD",
  "file": "passport.js",
  "sourceRoot": "../../../src/app/config",
  "sourcesContent": [
    "'use strict'\r\n\r\nvar GitHubStrategy = require(\"passport-github\").Strategy\r\nvar User = require(\"../models/users\")\r\nvar configAuth = require(\"./auth\")\r\n\r\nmodule.exports = function(passport) {\r\n    passport.serializeUser(function(user, done) {\r\n        done(null, user.id)\r\n    })\r\n    passport.deserializeUser(function(id, done) {\r\n        User.findById(id, function(err, user) {\r\n            done(err, user)\r\n        })\r\n    })\r\n    passport.use(new GitHubStrategy({\r\n        clientID: configAuth.githubAuth.clientID,\r\n        clientSecret: configAuth.githubAuth.clientSecret,\r\n        callbackURL: configAuth.githubAuth.callbackURL,\r\n    },\r\n    function (token, refreshToken, profile, done) {\r\n        process.nextTick(function() {\r\n            User.findOne({'github.id': profile.id}, function(err, user) {\r\n                if (err) return done(err)\r\n                if (user) {\r\n                    return done(null, user)\r\n                }\r\n                else {\r\n                    var newUser = new User()\r\n                    newUser.github.id = profile.id\r\n                    newUser.github.displayName = profile.id\r\n                    newUser.github.username = profile.username\r\n                    newUser.github.publicRepos = profile._json.public_repos\r\n                    newUser.attending = []\r\n                \r\n                    newUser.save(function(err) {\r\n                        if (err) throw err\r\n                        return done(null, newUser)\r\n                    })\r\n                }\r\n            })\r\n        })\r\n    }\r\n    ))\r\n}"
  ]
}
